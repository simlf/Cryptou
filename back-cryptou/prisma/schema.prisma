generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String  @id @default(uuid())
  email           String  @unique
  password        String
  defaultCurrency String  @default("EUR")
  role            Int
  keywords        String?
  Role            Role    @relation(fields: [role], references: [id])
  token           String?
}

model Feed {
  id              Int       @id @default(autoincrement())
  name            String
  url             String    @unique
  languageName    String
  lastFetched     DateTime?
  lastArticleDate DateTime?
  Article         Article[]
}

model Cryptocurrency {
  id       Int    @id @default(autoincrement())
  fullName String @unique
  slugName String
  imageUrl String
}

model Article {
  id       Int              @id @default(autoincrement())
  title    String
  summary  String
  source   String
  date     DateTime
  pageUrl  String           @unique
  imageUrl String?
  keywords ArticleKeyword[]
  feedId   Int
  feed     Feed             @relation(fields: [feedId], references: [id])
}

model Keyword {
  id             Int              @id @default(autoincrement())
  keyword        String           @unique
  ArticleKeyword ArticleKeyword[]
}

model ArticleKeyword {
  id        Int     @id @default(autoincrement())
  keywordId Int
  articleId Int
  Keyword   Keyword @relation(fields: [keywordId], references: [id])
  Article   Article @relation(fields: [articleId], references: [id])
}

enum RoleName {
  admin
  user
}

model Role {
  id   Int      @id @default(autoincrement())
  role RoleName @unique
  User User[]
}
